====================================================================================================
CURSO API REST SPRING BOOT - DEPLOY - CONTAINERS DOCKER
====================================================================================================


Configurando Dockerfile para construir a aplicação
----------------------------------------------------------------------------------------------------
- Criar o arquivo 'dockerfile-app' na raiz do projeto 'taskbook'

FROM openjdk:17-jdk-slim
ARG JAR_FILE=target/taskbook-0.0.1-SNAPSHOT.jar
COPY ${JAR_FILE} app.jar
ENTRYPOINT ["java", "-jar", "/app.jar"]


Preparando script do banco de dados para o Docker Compose
----------------------------------------------------------------------------------------------------
- Criar o diretório 'database' na raiz do projeto 'taskbook'

- Criar o arquivo 'taskbook.sql'

CREATE DATABASE taskbook CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci;

USE taskbook;

CREATE TABLE tasks (
  id INTEGER NOT NULL AUTO_INCREMENT,
  description VARCHAR(100) NOT NULL,
  initial_date DATETIME NOT NULL,
  final_date DATETIME NOT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE utf8mb3_general_ci;


Preparando o arquivo docker-compose.yml
----------------------------------------------------------------------------------------------------
- Criar o arquivo 'docker-compose.yml' na raiz do projeto

version: '3.9'
networks:
  taskbook:
    driver: bridge
    name: taskbook
volumes:
  taskbook:
services:
  db:
    image: mysql:8.0.29
    container_name: taskbook-db
    restart: always
    environment:
      TZ: America/Sao_Paulo
      MYSQL_ROOT_PASSWORD: root
      MYSQL_TCP_PORT: 3308
    ports:
      - 3308:3308
    expose:
      - 3308
    networks:
      - taskbook
    volumes:
      - ./database/taskbook.sql:/docker-entrypoint-initdb.d/0_create.sql
  app:
    depends_on:
      - db
    build:
      context: .
      dockerfile: dockerfile-app
    image: erosvitor/taskbook
    container_name: taskbook-app
    restart: always
    # Estas propriedades sobrepoem as propriedades no 'application.yml'
    environment:
      TZ: America/Sao_Paulo
      SPRING.DATASOURCE.URL: jdbc:mysql://db:3308/taskbook?useTimezone=true&serverTimezone=UTC
      SPRING.DATASOURCE.USERNAME: root
      SPRING.DATASOURCE.PASSWORD: root
    ports:
      - 8080:8080
    networks:
      - taskbook


Criandos os containers
----------------------------------------------------------------------------------------------------
- Criar os containers com o comando abaixo

  $ docker compose up


Monitorando os containers
----------------------------------------------------------------------------------------------------
- Verificado se os containers foram criados

  $ docker container ls

- Verificando os logs do container do banco de dados

  $ docker logs taskbook-db

- Verificando os logs do container da aplicação

  $ docker logs taskbook-app

- Obtendo o endereço IP do container da aplicação

  $ docker inspect taskbook-app | grep IPAddress

- Acessando a documentação da API

  http://<IP-CONTAINER-APLICACAO>:8080/swagger-ui/index.html

- Acessando o container do banco de dados

  $ docker exec -it taskbook-db /bin/bash

- Obtendo estatísticas dos containers

  $ docker stats


